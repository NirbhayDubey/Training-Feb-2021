// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticeGeneric.Models;

namespace PracticeGeneric.Migrations
{
    [DbContext(typeof(genericDbContext))]
    partial class genericDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PracticeGeneric.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<string>("Department")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime")
                        .HasColumnName("joiningDate");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("ManagerID");

                    b.Property<int?>("Salary")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PracticeGeneric.Models.Incentive", b =>
                {
                    b.Property<int>("IncentiveId")
                        .HasColumnType("int")
                        .HasColumnName("IncentiveID");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<int?>("IncentiveAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IncentiveDate")
                        .HasColumnType("date");

                    b.HasKey("IncentiveId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Incentives");
                });

            modelBuilder.Entity("PracticeGeneric.Models.Incentive", b =>
                {
                    b.HasOne("PracticeGeneric.Models.Employee", "Employee")
                        .WithMany("Incentives")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Incentive__EMPLO__3D5E1FD2");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PracticeGeneric.Models.Employee", b =>
                {
                    b.Navigation("Incentives");
                });
#pragma warning restore 612, 618
        }
    }
}
