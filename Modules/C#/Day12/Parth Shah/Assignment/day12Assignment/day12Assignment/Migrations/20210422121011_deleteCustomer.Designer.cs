// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using day12Assignment;

namespace day12Assignment.Migrations
{
    [DbContext(typeof(toyCompanyDbContext))]
    [Migration("20210422121011_deleteCustomer")]
    partial class deleteCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("day12Assignment.Models.customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("toyId")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("toyId")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("day12Assignment.Models.order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("totalPrice")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("day12Assignment.Models.plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("day12Assignment.Models.toys", b =>
                {
                    b.Property<int>("toyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("toyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("toyPrice")
                        .HasColumnType("int");

                    b.HasKey("toyId");

                    b.HasIndex("PlantId");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("day12Assignment.Models.customer", b =>
                {
                    b.HasOne("day12Assignment.Models.toys", "Toys")
                        .WithOne("Customer")
                        .HasForeignKey("day12Assignment.Models.customer", "toyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Toys");
                });

            modelBuilder.Entity("day12Assignment.Models.order", b =>
                {
                    b.HasOne("day12Assignment.Models.customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("day12Assignment.Models.toys", b =>
                {
                    b.HasOne("day12Assignment.Models.plant", "Plant")
                        .WithMany("Toys")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("day12Assignment.Models.customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("day12Assignment.Models.plant", b =>
                {
                    b.Navigation("Toys");
                });

            modelBuilder.Entity("day12Assignment.Models.toys", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
